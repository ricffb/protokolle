Alexander hat bei mir die Fragen gestellt; Gerhard hat nur manchmal Tipps gegeben, die haben mir aber mehr geholfen als die Tipps vom Alexander ^^
AL
- Also in der Aussagenlogik, was hatten wir dann da so?
- Gut, dann kÃ¶nnen wir ja eine Formel beweisen. Wie heiÃŸt denn das KalkÃ¼l, das wir dafÃ¼r haben?
- (C -> B) -> (!B -> !C) Was ist denn das? (Ich hab gesagt bestimmt eine Tautologie, aber ich weiÃŸ leider nicht welche; da haben sie gelacht und gemeint, ich kann ja mal anfangen das zu beweisen)
- Wie hÃ¤tte denn der Simplifier das gemacht, hÃ¤tte der das genauso gemacht? -> Nein, hÃ¤tte nur die KalkÃ¼lregeln die eine PrÃ¤misse ergeben angewendet
- HÃ¤tte er es denn trotzdem schlieÃŸen kÃ¶nnen? -> Ja
- Wie hÃ¤tte er das gemacht? -> wollten darauf hinaus, dass er kontextgebundene Simplifikation verwendet bei (C -> B),C => â€¦ (wusste ich nicht sofort, dass sie auf den Begriff hinaus wollten, haben aber so lange nachgefragt, bis ich kontextabhÃ¤ngige Simplifikation erklÃ¤rt hatte)
PL
- Wir hatten dann ja PrÃ¤dikatenlogik, was gilt denn bei der PrÃ¤dikatenlogik noch, was schon bei der Aussagenlogik galt und was nicht? -> wollten auf VollstÃ¤ndigkeit, Korrektheit, Invertierbarkeit gilt und Entscheidbarkeit gilt nicht mehr hinaus; Entscheidbarkeit hat bei mir ewig gedauert, da haben sie mir sehr viele Tipps gegeben von wegen â€žgilt mit den Quantoren irgendwas nicht mehr?â€œ, â€ždas kam von Alonzo Churchâ€œ kam von Alex und hat mich drauf gebracht ^^ Entscheidbarkeit musste ich dann noch erklÃ¤ren und warum die bei PrÃ¤dikatenlogik nicht mehr gilt
- Dann wollten sie auf Rewriteregel und Ã„quivalenzregel hinaus; Rewriteregel musste ich hinschreiben und genauer erklÃ¤ren, wie das funktioniert. Also wonach der Simplifier sucht; also erst nach dem Term t, den er dann durch u ersetzen kann; da wollten sie genauer wissen, wie t in der Sequenz aussehen muss (war am Beispiel => (m <= n) -> (n-m)+m = n und da wollten sie drauf hinaus, dass auch â€ž5â€œ statt dem m dastehen kÃ¶nnte)
Dann musste ich noch erklÃ¤ren, wie der Simplifier nach dem phi und dem Gamma suchen wÃ¼rde (phi muss im Antezedenz stehen und Gamma rekursiver Simplifieraufruf hat gereicht)
- Dann sollte ich die fÃ¼r-alle-rechts Regel aus dem KalkÃ¼l aufschreiben und dabei erklÃ¤ren -> da wollten sie auch darauf hinaus, warum da y neu sein muss und was passieren wÃ¼rde, wenn es nicht neu wÃ¤re
Generiertheit
- Und dann hat uns die PrÃ¤dikatenlogik aber nicht mehr gereicht, warum war das so? -> Skolem
- Und was haben wir dagegen gemacht? -> Generiertheitsklauseln
- Was genau bewirken denn die Generiertheitsklauseln? (ich hab einfach immer weiter geredet, bis ich an Alex Gesicht gesehen hab, dass ich genau die Sache dazu gesagt hab, die er haben wollte ^^)
- Dann weiÃŸ ich nicht mehr, was genau er weiter gefragt hat; es ging aber glaub ich noch ne Weile um Begrifflichkeiten, dann wollten sie auf freie Generiertheit und Data Specifications hinaus und ob man Monomorphie und Korrektheit automatisch hat mit Data Spec.
- Ich sollte auch die Data Specification von listen auf Papier aufschreiben; sie wollten da dann auf die Selektoren hinaus
- Ging dann auch Ã¼ber freie Generiertheit; was da dazu kommt und welche freien Datentypen es denn so gibt (auf Tupel und AufzÃ¤hlungstypen bin ich nicht gleich gekommen)
- Eindeutigkeit erklÃ¤ren und in welchem Zusammenhang das vorkommt (Anreicherungen)
- Anreicherungen erklÃ¤ren und Hierarchiepersistenz. Alex hat dann immer weiter Fragen gestellt, er wollte unbedingt auf den Begriff â€žErweiterungâ€œ hinaus.
KIV
Intersection von zwei Listen strukturell rekursiv spezifizieren
Int-base: intersection(x,[]) = []
Int-rec1: (a in x) -> intersection(x, a + y) = a + intersection(x,y)
Int-rec2: !(a in x) -> intersection(x, a + y) = intersection(x,y)
und dann auch in KIV ein Lemma dazu beweisen:
intersetion(append(x,y), z) = append(intersection(x,z),intersection(y,z))
1. Sinnvolle Regeln in Simplifier
2. PL Heuristiken an
3. Strukturelle Induktion (erklÃ¤ren, warum Ã¼ber welche Variable!)
4. Jeweils einen der FÃ¤lle aus der Rekursion bei den zwei Verzweigungen, die man bekommt anwenden
5. Fertig
Wie immer haben sie echt viele Tipps gegeben und es auch nicht negativ angekreidet, dass man Tipps gebraucht hat, so lange man dann doch noch das gesagt hat worauf sie hinauswollten. Bewertung war auch wieder sehr nett ðŸ˜Š