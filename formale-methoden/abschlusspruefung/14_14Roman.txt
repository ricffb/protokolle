Vergleichbar mit den anderen Prüfungen von Lena & Dominik
Alex hat gefragt.

Nichtfreie Datentypen: Hypergraph mit Kanten mit Labels: mkgraph, addnode(n, g), addlabel(n, l, g). Extensionalitätsaxiom. addlabel(node, label, graph) fügt einem node ein label hinzu. Wenn zwei oder mehr nodes das gleiche label haben, dann existiert eine kante zwischen nodes. Das addlabel kann man auch mehrfach aufrufen auf einer node, dann existiert eine kante auf der node selbst (bzw. sogar mehrere kanten). Ich hab dafür eine funktion #(node, label, graph) definiert, die die anzahl eines labels auf einer node zählt. Das muss rekursiv für die drei konstruktoren definiert werden. Das kann man dann in EQ nutzen.

Verschiedene Möglichkeiten zu definieren, Frage zu wohlfundiert: Was ist das, was ändert sich zu allgemein rekursiv? Was ist eine noethersche Relation? Noethersche Induktionsregel für Listenlängen. 
Was ist die allgemeine Form bei noetherschen Induktion? Da bin ich etwas ins Straucheln gekommen, vor allem weil mich das x mit dem Pfeil oben verwirrt hat (x^-> steht für den Pfeil, der über Variablen stehen kann und sagt, dass hier beliebig viele verschiedene Variablen stehen können). Allgemein sieht es dann so aus f(x^->) = t^->. Hier kam die Frage, was da jetzt passiert. Ich habe gesagt, dass das Argument im rekursiven Aufruf kleiner wird, deswegen geben wir ja die noethersche Relation an. Das hat ihnen nicht gereicht, sondern sie wollten das irgendwie allgemeiner haben, wie der rekursive Aufruf aussieht. f(x^->) ist logischerweise falsch. Gesucht wurde f(t^->), wobei t^-> beliebige Terme sind, deren Wert noethersch abgenommen hat. Irgendwie bin ich nicht darauf gekommen, dass nicht immer nur ein rekursiver Aufruf von f stattfinden muss, sondern es auch beliebig viele rekursive Aufrufe geben kann, solange t^-> abnimmt. Generell scheint ihnen das Wording bei Noethersche Induktion sehr wichtig zu sein.

Der Rest war quasi identisch zu Dominik. Wichtig war noch, dass man sagen kann wie die Relationale Semantik definiert ist -> Strukturell Rekursiv über dem Programmaufbau und mit Mengen, in denen wir prüfen können, ob zwei Zustände zu einem p vorhanden sind (das geht dann beim Rns nicht mehr so einfach, dafür brauchen wir Fixpunktsätze).

Bei abstrakten Datentypen wollte Alex genaueres über die Abstraktionsrelation wissen (neben den Standardfragen). Vorwärtssimulation hat ihm nicht gereicht, er wollte an einer Zeichnung erklärt bekommen, wie ich von einem konkreten Ablauf zu einem abstrakten Ablauf komme mit Hilfe der Abstraktionsrelation. Ich vermute das mit der Zeichnung wollte er sehen, weil ich bei der Erklärung etwas gestruggelt habe. Was er hören wollte ist, dass wir nicht alle Abläufe durchprobieren, sondern dass wir hier induktiv beweisen (letztendlich so wie halt die Abstraktionsrelation definiert ist).

KIV exakt gleich wie bei Dominik und Lena. Gerhard hat sehr viel erklärt und geholfen.